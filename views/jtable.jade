|<!doctype html>	
html
  head    
    link(rel='stylesheet', href='/stylesheets/style.css', type='text/css')
    link(href='/javascripts/jquery/jquery-ui-1.11.0/jquery-ui.css', rel='stylesheet', type='text/css')
    link(href='/javascripts/jtable.2.4.0/themes/metro/crimson/jtable.css', rel='stylesheet', type='text/css')
    link(href='/javascripts/jtable.2.4.0/themes/jqueryui/jtable_jqueryui.css', rel='stylesheet', type='text/css')
    script(src='/javascripts/jquery/jquery-1.11.1.js', type='text/javascript')
    script(src='/javascripts/jquery/jquery-ui-1.11.0/jquery-ui.js', type='text/javascript')
    script(src='/javascripts/jtable.2.4.0/jquery.jtable.js', type='text/javascript')
    |</script>       
    |<script type='text/javascript'>
    |  $(document).ready(function () {
    |    function dateFormat(sdate){
    |       var date = new Date(sdate);
    |       return date.getMonth() + 1 + '/' + date.getDate() + '/' +  date.getFullYear();   
    |    }
    |  	 $('#StoreAllContainer').jtable({
    |  		title: 'Storeall Table',
    |  		paging: true,
    |       pageList: 'mimimal',
    |  		sorting: true,
    |       selecting: true,
    |  		defaultSorting: 'itemname Asc',
    |  		actions: {
    |  			listAction: '/itemlist',
    |  			createAction:'/new_item',
    |  			updateAction: '/update_item',
    |  			deleteAction: '/delete_item'               
    |  		},
    |  		fields: {
    |           _rev: {
    |              list: false,
    |              edit: false,
    |              create: false
    |           },
    |  			rev: {
    |  				type:'hidden'
    |               //defaultValue:_rev
    |  			},
    |  			itemname: {
    |  				title:'Item Name',
    |  				key: true,
    |  				list: true,
    |  				create:true,
    |               edit: false    
    |  			},
    |           itemvalue: {
    |  				title: 'Value',
    |  				width: '30%',
    |  				list: true,
    |               display: function(data){
    |                  data.record.rev=data.record._rev;
    |                  if (data.record.itemvisible==='true'){
    |                      return data.record.itemvalue;
    |                  } else {
    |                      return "@@@@@@@@@@@@@";
    |                  }
    |               },
    |  				create: true
    |  			},
    |           itemvisible: {
    |  				title: 'Value is Visible',
    |  				width: '30%',
    |  				list: false,
    |  				create: true,
    |               type: 'radiobutton',
    |               options: { 'true':'Yes', 'false':'No'},
    |               defaultValue: 'false'        
    |  			},
    |			itemdatemodified: { 
    |  				title: 'Date Modified',
    |  				width: '30%',
    |  				list: true,
    |  				create: false,
    |				edit: false,
    |				display: function(data){
    |                 var date = new Date(data.record.itemdatemodified);
    |                 return date.getMonth() + 1 + '/' + date.getDate() + '/' +  date.getFullYear();
    |				}
    |  			},
    |           itemexpiration: {
    |               title: 'Expiration Date',
    |               width: '30%',
    |               list: true,
    |               create: true,
    |               edit: true,
    |               //type: 'date' ,
    |               display: function(data){
    |                  if ((data.record.itemexpiration === undefined) || (data.record.itemexpiration<=0)){
    |                       return "Indefinite";
    |                  } else {
    |                       return dateFormat(data.record.itemexpiration);
    |                  }
    |              }
    |           },
    |           itemusage: {
    |              title: 'Usage',
    |              list: false,
    |              create: true,
    |              edit: true,
    |              options: {'Pasting':'paste','Exec':'launch'}
    |           },  
    |           itemcommand: {
    |  				title: 'Command',
    |  				width: '30%',
    |  				list: false,
    |  				create: true
    |  			},
    |           itemremarks: {
    |  				title: 'Remarks',
    |  				width: '30%',
    |  				list: true,
    |  				create: true
    |  			}             
    |  		},
    |       recordUpdated: function (event, data) {
    |           if (data.record) {
    |               $('#StoreAllContainer').jtable('reload');
    |           }
    |       },
    |       deleteConfirmation: function(data) {
    |          data.deleteConfirmMessage = 'Are you sure to delete item ' + data.record.itemname + '?';
    |       },
    |       selectionChanged: function (event, data) {
    |           var selectedRows = $('#StoreAllContainer').jtable('selectedRows');    
    |           var dataval='';
    |           var record;
    |           if (selectedRows.length >0) {
    |                selectedRows.each(function () {
    |                  record = $(this).data('record');
    |                  dataval=record.itemvalue;    
    |                }); 
    |                copy(record,document);
    |           }
    |       }
    |  	}
    |  );
    |  $('#StoreAllContainer').jtable('load');    
    |});            
    |</script>
    |<script type="text/javascript">   
    |  function SimulatedClipboard(document) {
    |    var TAId="SClipTextArea";
    |    var enclosureId="SClipEncl";
    |    var enclosure;
    |    var SC = this;
    |    var keyDown='keydown';
    |    var keyUp='keyup';
    |    
    |    function registerForKeyDownEvent(doc, handler){
    |      doc.addEventListener(keyDown, handler);         
    |    }
    |    
    |    function registerForKeyUpEvent(doc, handler){
    |      doc.addEventListener(keyUp, handler);
    |    } 
    |           
    |    var SCTextArea = function () {
    |      enclosure = document.querySelector('#' + enclosureId);
    |      if (!enclosure) {
    |        enclosure = document.createElement('div');
    |        enclosure.id = enclosureId;
    |        enclosure.setAttribute('style', [, 'position: fixed;', 'left: 0px;', 'top: 0px;', 'width: 0px;', 'height: 0px;', 'z-index: 100;', 'opacity: 0;'].join(''));
    |        document.body.appendChild(enclosure);
    |      }
    |      enclosure.innerHTML = '';    
    |      enclosure.style.display = 'block';
    |      var scTextArea = document.createElement('textarea');
    |      scTextArea.setAttribute('style', [, 'width: 1px;', 'height: 1px;', 'padding: 0px;'].join(''));
    |      scTextArea.id = TAId;
    |      enclosure.appendChild(scTextArea);
    |      scTextArea.appendChild(document.createTextNode(SC.value));
    |      scTextArea.focus();
    |      scTextArea.select();
    |    };
    |        
    |    var keyUpEventHandler = function (e) {
    |      var code = e.keyCode || e.which;
    |      if (e.target.id !== TAId) {
    |          return;
    |      }
    |      if (code!==67){
    |         return;
    |      }        
    |      enclosure.style.display = 'none';
    |    };
    |                
    |    var keyDownEventHandler = function (e) {
    |      if (!(e.ctrlKey || e.metaKey)) {
    |          return;
    |      }
    |      if (window.getSelection && window.getSelection() && window.getSelection().toString()) {
    |          return;
    |      }
    |      if (document.selection && document.selection.createRange().text) {
    |          return;
    |      }
    |      setTimeout(SCTextArea, 0);
    |    };  
    |    registerForKeyDownEvent(document,keyDownEventHandler);
    |    registerForKeyUpEvent(document,keyUpEventHandler);        
    |  } 
    |                        
    |  function copy(el,document) {
    |    var clip = new SimulatedClipboard(document);
    |    var selected = document.getElementsByClassName("selected");
    |    for (var i = 0; i < selected.length; i++) {
    |      selected[i].className = '';
    |    }
    |    el.className = 'selected'; 
    |    SimulatedClipboard.prototype.value=el.itemvalue; 
    |  }
    |</script>
  body
    div(style='width: 60%; margin-right: 20%; margin-left: 20%; text-align: right;')
      h1 Store All - The General Purpose Storage Container
      #StoreAllContainer
